[{"G:\\insta clone\\client\\src\\index.js":"1","G:\\insta clone\\client\\src\\App.js":"2","G:\\insta clone\\client\\src\\reportWebVitals.js":"3","G:\\insta clone\\client\\src\\components\\Navbar.js":"4","G:\\insta clone\\client\\src\\components\\screens\\Profile.js":"5","G:\\insta clone\\client\\src\\components\\screens\\Login.js":"6","G:\\insta clone\\client\\src\\components\\screens\\Singup.js":"7","G:\\insta clone\\client\\src\\components\\screens\\Home.js":"8","G:\\insta clone\\client\\src\\components\\screens\\Creatpost.js":"9","G:\\insta clone\\client\\src\\reducers\\userReducer.js":"10","G:\\insta clone\\client\\src\\components\\screens\\UserProfile.js":"11"},{"size":500,"mtime":1607851885170,"results":"12","hashOfConfig":"13"},{"size":1621,"mtime":1609264436422,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"13"},{"size":1002,"mtime":1609090239614,"results":"16","hashOfConfig":"13"},{"size":1909,"mtime":1609146879264,"results":"17","hashOfConfig":"13"},{"size":2721,"mtime":1609150177229,"results":"18","hashOfConfig":"13"},{"size":2632,"mtime":1609090350337,"results":"19","hashOfConfig":"13"},{"size":6190,"mtime":1609262954903,"results":"20","hashOfConfig":"13"},{"size":2705,"mtime":1609077617693,"results":"21","hashOfConfig":"13"},{"size":226,"mtime":1609089773452,"results":"22","hashOfConfig":"13"},{"size":2294,"mtime":1609266829613,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"ha9yp6",{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"26"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"55"},"G:\\insta clone\\client\\src\\index.js",[],["56","57"],"G:\\insta clone\\client\\src\\App.js",["58","59"],"import React, { useEffect, createContext ,useReducer, useContext} from 'react';\nimport NavBar from './components/Navbar';\n\nimport \"./App.css\";\nimport { BrowserRouter, Route,Switch,useHistory } from 'react-router-dom';\n\n\nimport Home from \"./components/screens/Home\"\nimport Signin from \"./components/screens/Login\"\nimport Profile from \"./components/screens/Profile\"\nimport Singup from \"./components/screens/Singup\"\nimport CreatPost from \"./components/screens/Creatpost\"\nimport {initialState, reducer} from './reducers/userReducer'\nimport UserProfile from './components/screens/UserProfile'\n\n export const UserContext = createContext()\n\nconst Routing = () => {\n  const history = useHistory()\n  const {state,dispatch} =useContext(UserContext)\n  useEffect(()=>{\n  const user = JSON.parse(localStorage.getItem(\"user\"))\n  if(user){\ndispatch({type:\"USER\",payload:user}) \n }else{\n    history.push('/signin')\n\n  }\n  },[])\n  return (\n    <Switch>\n      < Route exact path=\"/\" >\n        <Home />\n      </Route >\n      <Route path=\"/signin\">\n        <Signin />\n      </Route>\n      <Route path=\"/singup\">\n        <Singup />\n      </Route>\n      <Route exact path=\"/profile\">\n        <Profile />\n      </Route>\n      <Route path=\"/creat\">\n        <CreatPost />\n      </Route>\n      <Route path=\"/profile/:userid\">\n        <UserProfile />\n      </Route>\n    </Switch>\n\n  )\n}\n\nfunction App() {\n\nconst [state,dispatch]= useReducer(reducer,initialState)\n  return (\n    <UserContext.Provider value={{state,dispatch}}>\n    <BrowserRouter>\n      <NavBar />\n<Routing />\n    </BrowserRouter>\n</UserContext.Provider>\n  );\n}\n\nexport default App;\n","G:\\insta clone\\client\\src\\reportWebVitals.js",[],"G:\\insta clone\\client\\src\\components\\Navbar.js",[],"G:\\insta clone\\client\\src\\components\\screens\\Profile.js",["60","61"],"import React,{useEffect,useState,useContext} from 'react'\r\nimport {UserContext} from '../../App'\r\n\r\nconst Profile = () => {\r\n    const [mypics,setPics] = useState([])\r\n    const {state,dispatch} = useContext(UserContext)\r\n    \r\n    useEffect(() => {\r\n        fetch('/mypost', {\r\n            headers: {\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res => res.json())\r\n        .then(result=>{\r\n                setPics(result.mypost)\r\n            })\r\n    }, [])\r\n\r\n    return (\r\n        <div style={{ maxWidth: \"550px\", margin: \"0px auto\" }}>\r\n            <div style={{\r\n                display: 'flex',\r\n                justifyContent: \"space-around\",\r\n                margin: \"18px 0\",\r\n                borderBottom: \"1px solid gray\"\r\n            }}>\r\n                <div>\r\n                    <img style={{ width: \"160px\", height: \"160px\", borderRadius: \"80px\" }}\r\n                        src=\"http://res.cloudinary.com/darpinsta/image/upload/v1609141652/uoworlaatdv3fsmjr4ye.jpg\"\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <h4>{state?state.name:\"loading..\"}</h4>\r\n                    <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"108%\" }}>\r\n                        <h6>40 post</h6>\r\n                        <h6>1000 Followers</h6>\r\n                        <h6>40 Followings</h6>\r\n                     </div>\r\n                \r\n                </div>\r\n            </div>\r\n            <div className=\"gallery\">\r\n                {\r\n                    mypics.map(item => {\r\n                        return (\r\n                            <img key={item._id} className=\"item\" src={item.photo} alt={item.title} />\r\n                               )\r\n                    })\r\n                }\r\n             \r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Profile","G:\\insta clone\\client\\src\\components\\screens\\Login.js",["62","63","64","65"],"import React, { useState ,useContext} from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport M from 'materialize-css';\r\nimport {UserContext} from '../../App'\r\n\r\nconst Login = () => {\r\n\r\nconst{state,dispatch}= useContext(UserContext)\r\n    const history = useHistory()\r\n\r\n    const [password, setPassword] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const PostData = () => {\r\n        if (!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)) {\r\n            M.toast({ html: \"invalid-email ID\", classes: \"#c62828 red darken-3\" })\r\n            return\r\n        }\r\n        fetch(\"/signin\", {\r\n            method: \"post\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n\r\n                password,\r\n                email\r\n            })\r\n\r\n        }).then(res => res.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                if (data.error) {\r\n                    M.toast({ html: data.error, classes: \"#c62828 red darken-3\" })\r\n                }\r\n                else {\r\n                    localStorage.setItem(\"jwt\",data.token)\r\n                    localStorage.setItem(\"user\",JSON.stringify(data.user))\r\n                    dispatch({type:\"USER\",payload:data.user})\r\n                    M.toast({ html: \"Login successful\", classes: \"#43a047 green darken-3\" })\r\n                    history.push('/')\r\n                }\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"mycard \">\r\n            <div className=\"card auth-card input-field\">\r\n\r\n                <h2>Instagram</h2>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"password\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n\r\n                <button className=\"btn waves-effect #673ab7 deep-purple\"\r\n\r\n                    onClick={() => PostData()}\r\n                >\r\n                    Login\r\n                </button>\r\n                <h5>\r\n                    <Link to=\"/singup\">Dont have an account ?</Link>\r\n                </h5>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","G:\\insta clone\\client\\src\\components\\screens\\Singup.js",["66","67","68"],"import React, { useState } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport M from 'materialize-css';\r\n\r\nconst Signup = () => {\r\n    const history = useHistory()\r\n    const [name, setName] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const PostData = () => {\r\n        if (!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)) {\r\n            M.toast({ html: \"invalid-email ID\", classes: \"#c62828 red darken-3\" })\r\n            return\r\n        }\r\n        fetch(\"/signup\", {\r\n            method: \"post\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                name,\r\n                password,\r\n                email\r\n            })\r\n\r\n        }).then(res => res.json())\r\n            .then(data => {\r\n                if (data.error) {\r\n                    M.toast({ html: data.error, classes: \"#c62828 red darken-3\" })\r\n                }\r\n                else {\r\n                    M.toast({ html: data.message, classes: \"#43a047 green darken-3\" })\r\n                    history.push('/signin')\r\n                }\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n    return (\r\n        <div className=\"mycard \">\r\n            <div className=\"card auth-card input-field\">\r\n\r\n                <h2>Instagram</h2>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"name\"\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"password\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n\r\n                <button className=\"btn waves-effect #673ab7 deep-purple\"\r\n                    onClick={() => PostData()}\r\n\r\n                >\r\n                    Signup\r\n                </button>\r\n                <h5>\r\n                    <Link to=\"/signin\">Already have an account ?</Link>\r\n                </h5>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signup","G:\\insta clone\\client\\src\\components\\screens\\Home.js",["69","70","71"],"import React, { useState, useEffect, useContext } from 'react';\r\nimport { UserContext } from '../../App'\r\n\r\nconst Home = () => {\r\n\r\n    const [data, setData] = useState([])\r\n    const { state, dispatch } = useContext(UserContext)\r\n    useEffect(() => {\r\n        fetch('/allpost', {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \"+localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res => res.json())\r\n            .then(result => {\r\n\r\n                setData(result.posts)\r\n            })\r\n    }, [])\r\n\r\n    const likePost = (id) => {\r\n        fetch('/like', {\r\n            method: \"put\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \"+localStorage.getItem(\"jwt\")\r\n\r\n            },\r\n            body: JSON.stringify({\r\n                postId: id\r\n            })\r\n        }).then(res => res.json())\r\n            .then(result => {\r\n\r\n                //console.log(result)\r\n                const newData = data.map(item => {\r\n                    if (item._id === result._id) {\r\n                        return result\r\n                    } else {\r\n                        return item\r\n                    }\r\n                })\r\n                setData(newData)\r\n\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const unlikePost = (id) => {\r\n        fetch('/unlike', {\r\n            method: \"put\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \"+localStorage.getItem(\"jwt\")\r\n\r\n            },\r\n            body: JSON.stringify({\r\n                postId: id\r\n            })\r\n        }).then(res => res.json())\r\n            .then(result => {\r\n                //console.log(result)\r\n                const newData = data.map(item => {\r\n                    if (item._id === result._id) {\r\n                        return result\r\n                    } else {\r\n                        return item\r\n                    }\r\n                })\r\n                setData(newData)\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const makeComment = (text, postId) => {\r\n\r\n        fetch('/comment', {\r\n            method: \"put\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body: JSON.stringify({\r\n                postId,\r\n                text\r\n            })\r\n        }).then(res => res.json())\r\n            .then(result => {\r\n                console.log(result)\r\n                const newData = data.map(item => {\r\n                    if (item._id === result._id) {\r\n                        return result\r\n                    } else {\r\n                        return item\r\n                    }\r\n                })\r\n                setData(newData)\r\n\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n\r\n    const deletePost = (postid) => {\r\n\r\n        fetch(`/deletepost/${postid}`, {\r\n            method: \"delete\",\r\n            headers: {\r\n              \r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res => res.json())\r\n        .then(result => {\r\n            console.log(result)\r\n            const newData =data.filter(item=>{\r\n                return item._id !== result._id\r\n            })\r\n            setData(newData)\r\n            })\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"home\">\r\n            {\r\n                data.map(item => {\r\n                    return (\r\n\r\n                        <div className=\"card home-card\" key={item._id}>\r\n                            <h5>{item.postedBy.name} {item.postedBy._id == state._id\r\n                         &&   <i className=\"material-icons\" style={{\r\n                                float:\"right\"\r\n                            }}\r\n                            onClick={()=>deletePost(item._id)}\r\n                            >delete</i> \r\n                            }\r\n                           </h5>\r\n                            <div className=\"card-image\">\r\n                                <img src={item.photo} />\r\n                            </div>\r\n                            <div className=\"card-content\">\r\n                                <i className=\"material-icons\" style={{ color: \"red\" }}>favorite</i>\r\n                                {item.likes.includes(state._id)\r\n                                    ?\r\n                                    <i className=\"material-icons\"\r\n                                        onClick={() => { unlikePost(item._id) }}\r\n                                    >thumb_down</i>\r\n                                    :\r\n\r\n\r\n                                    <i className=\"material-icons\"\r\n                                        onClick={() => { likePost(item._id) }}\r\n                                    >thumb_up</i>\r\n\r\n\r\n                                }\r\n\r\n                                <h6>{item.likes.length} likes</h6>\r\n                                <h6>{item.title}</h6>\r\n                                <p>{item.body} </p>\r\n                                {\r\n                                    item.comments.map(record => {\r\n                                        return (\r\n                                            <h6 key={record._id}><span style={{ fontWeight: \"500\" }}>{record.postedBy.name}</span> {record.text}</h6>\r\n                                        )\r\n                                    })\r\n                                }\r\n                                <form onSubmit={(e) => {\r\n                                    e.preventDefault()\r\n                                    makeComment(e.target[0].value, item._id)\r\n                                }}>\r\n                                    <input type=\"text\" placeholder=\"do comment\" />\r\n\r\n\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                    )\r\n                })\r\n            }\r\n\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Home","G:\\insta clone\\client\\src\\components\\screens\\Creatpost.js",["72","73"],"import React,{ useState,useEffect }  from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { useHistory } from 'react-router-dom';\r\nimport M from 'materialize-css';\r\n\r\nconst CreatPost = () => {\r\n  const history = useHistory()\r\n  const [title,setTitle]= useState(\"\")\r\n  const [body,setBody]= useState(\"\")\r\n  const [image,setImage]= useState(\"\")\r\n  const [url,setUrl]= useState(\"\")\r\n  \r\nuseEffect(()=>{\r\n  if(url){ \r\n  fetch(\"/creatpost\", {\r\n    method: \"post\",\r\n    headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Authorization\": \"Bearer \"+localStorage.getItem(\"jwt\")\r\n    },\r\n    body: JSON.stringify({\r\n       \r\n        title,\r\n        body,\r\n        pic:url\r\n    })\r\n\r\n}).then(res => res.json())\r\n    .then(data => {\r\n        console.log(data)\r\n        if (data.error) {\r\n            M.toast({ html: data.error, classes: \"#c62828 red darken-3\" })\r\n        }\r\n        else {\r\n            M.toast({ html: \"created post successful\", classes: \"#43a047 green darken-3\" })\r\n            history.push('/')\r\n        }\r\n    }).catch(err => {\r\n        console.log(err)\r\n    })\r\n\r\n}\r\n},[url])\r\n\r\n\r\n  const postDetails = ()=>{\r\n    const data = new FormData()\r\n    data.append(\"file\",image)\r\n    data.append(\"upload_preset\",\"insta-clone\")\r\n    data.append(\"cloud_name\",\"darpinsta\")\r\n    fetch(\"https://api.cloudinary.com/v1_1/darpinsta/image/upload\",{\r\n      method: \"post\",\r\n    body: data\r\n  })\r\n  .then(res => res.json())\r\n            .then(data => {\r\n             setUrl(data.url)\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n\r\n\r\n\r\n  }\r\n\r\n  return (\r\n        <div className=\"card input-filed\"\r\n        style={{\r\n            margin:\"30px auto\",\r\n            maxWidth:\"500px\",\r\n            padding:\"20px\",\r\n            textAlign:\"center\"\r\n        }}\r\n        >\r\n        <input type=\"text\" placeholder=\"title\"\r\n        value={title}\r\n        onChange={(e)=>setTitle(e.target.value)}\r\n        />\r\n        <input type=\"text\" placeholder=\"body\"\r\n         value={body}\r\n         onChange={(e)=>setBody(e.target.value)}\r\n         />\r\n\r\n    <div className=\"file-field input-field\">\r\n      <div className=\"btn  #673ab7 deep-purple\">\r\n        <span>Uplaod File</span>\r\n        <input type=\"file\" \r\n        \r\n        onChange={(e)=>setImage(e.target.files[0])}\r\n\r\n         />\r\n      </div>\r\n      <div className=\"file-path-wrapper\">\r\n        <input className=\"file-path validate \" type=\"text\" placeholder=\"Upload one or more files\" />\r\n      </div>\r\n    </div>\r\n  \r\n    <button className=\"btn waves-effect #673ab7 deep-purple\"\r\n    onClick={()=>postDetails()}\r\n    >\r\nsubmit post                </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreatPost","G:\\insta clone\\client\\src\\reducers\\userReducer.js",["74","75"],"\r\nexport const initialState =null\r\n\r\nexport const reducer  = (state,action)=>{\r\n    if(action.type==\"USER\"){\r\n        return action.payload\r\n    }\r\n    if(action.type==\"CLEAR\"){\r\n        return null\r\n    }\r\n    return state\r\n}","G:\\insta clone\\client\\src\\components\\screens\\UserProfile.js",["76","77","78","79"],"import React,{useEffect,useState,useContext} from 'react'\r\nimport {UserContext} from '../../App'\r\nimport {useParams} from  'react-router-dom'\r\n\r\nconst Profile = () => {\r\n    const [userProfile,setProfile] = useState(null)\r\n    const {state,dispatch} = useContext(UserContext)\r\n    const {userid} =useParams()\r\n    console.log(userid)\r\n    useEffect(() => {\r\n        fetch(`/user/:${userid}`, {\r\n            headers: {\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res => res.json())\r\n        .then(result=>{\r\n            console.log(result)\r\n               // setPics(result.mypost)\r\n               setProfile(result)\r\n            })\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n        {userProfile ? \r\n        \r\n        <div style={{ maxWidth: \"550px\", margin: \"0px auto\" }}>\r\n            <div style={{\r\n                display: 'flex',\r\n                justifyContent: \"space-around\",\r\n                margin: \"18px 0\",\r\n                borderBottom: \"1px solid gray\"\r\n            }}>\r\n                <div>\r\n                    <img style={{ width: \"160px\", height: \"160px\", borderRadius: \"80px\" }}\r\n                        src=\"http://res.cloudinary.com/darpinsta/image/upload/v1609141652/uoworlaatdv3fsmjr4ye.jpg\"\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <h4>{userProfile.user.name}</h4>\r\n                    <h5>{userProfile.user.email}</h5>\r\n\r\n                    <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"108%\" }}>\r\n                        <h6>{userProfile.posts.length} post</h6>\r\n                        <h6>1000 Followers</h6>\r\n                        <h6>40 Followings</h6>\r\n                     </div>\r\n                \r\n                </div>\r\n            </div>\r\n            <div className=\"gallery\">\r\n                {\r\n                    userProfile.posts.map(item => {\r\n                        return (\r\n                            <img key={item._id} className=\"item\" src={item.photo} alt={item.title} />\r\n                               )\r\n                    })\r\n                }\r\n             \r\n            </div>\r\n\r\n        </div>\r\n        \r\n        \r\n        :<h2>Loading......</h2>}\r\n        \r\n</>\r\n    )\r\n}\r\n\r\nexport default Profile",["80","81"],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":20,"column":10,"nodeType":"88","messageId":"89","endLine":20,"endColumn":15},{"ruleId":"90","severity":1,"message":"91","line":29,"column":5,"nodeType":"92","endLine":29,"endColumn":7,"suggestions":"93"},{"ruleId":"86","severity":1,"message":"94","line":6,"column":18,"nodeType":"88","messageId":"89","endLine":6,"endColumn":26},{"ruleId":"95","severity":1,"message":"96","line":28,"column":21,"nodeType":"97","endLine":30,"endColumn":23},{"ruleId":"86","severity":1,"message":"98","line":2,"column":10,"nodeType":"88","messageId":"89","endLine":2,"endColumn":15},{"ruleId":"86","severity":1,"message":"87","line":9,"column":7,"nodeType":"88","messageId":"89","endLine":9,"endColumn":12},{"ruleId":"99","severity":1,"message":"100","line":15,"column":24,"nodeType":"101","messageId":"102","endLine":15,"endColumn":25,"suggestions":"103"},{"ruleId":"99","severity":1,"message":"100","line":15,"column":49,"nodeType":"101","messageId":"102","endLine":15,"endColumn":50,"suggestions":"104"},{"ruleId":"86","severity":1,"message":"98","line":2,"column":10,"nodeType":"88","messageId":"89","endLine":2,"endColumn":15},{"ruleId":"99","severity":1,"message":"100","line":12,"column":24,"nodeType":"101","messageId":"102","endLine":12,"endColumn":25,"suggestions":"105"},{"ruleId":"99","severity":1,"message":"100","line":12,"column":49,"nodeType":"101","messageId":"102","endLine":12,"endColumn":50,"suggestions":"106"},{"ruleId":"86","severity":1,"message":"94","line":7,"column":20,"nodeType":"88","messageId":"89","endLine":7,"endColumn":28},{"ruleId":"107","severity":1,"message":"108","line":139,"column":73,"nodeType":"109","messageId":"110","endLine":139,"endColumn":75},{"ruleId":"95","severity":1,"message":"96","line":148,"column":33,"nodeType":"97","endLine":148,"endColumn":57},{"ruleId":"86","severity":1,"message":"98","line":2,"column":10,"nodeType":"88","messageId":"89","endLine":2,"endColumn":15},{"ruleId":"90","severity":1,"message":"111","line":43,"column":3,"nodeType":"92","endLine":43,"endColumn":8,"suggestions":"112"},{"ruleId":"107","severity":1,"message":"108","line":5,"column":19,"nodeType":"109","messageId":"110","endLine":5,"endColumn":21},{"ruleId":"107","severity":1,"message":"108","line":8,"column":19,"nodeType":"109","messageId":"110","endLine":8,"endColumn":21},{"ruleId":"86","severity":1,"message":"87","line":7,"column":12,"nodeType":"88","messageId":"89","endLine":7,"endColumn":17},{"ruleId":"86","severity":1,"message":"94","line":7,"column":18,"nodeType":"88","messageId":"89","endLine":7,"endColumn":26},{"ruleId":"90","severity":1,"message":"113","line":21,"column":8,"nodeType":"92","endLine":21,"endColumn":10,"suggestions":"114"},{"ruleId":"95","severity":1,"message":"96","line":35,"column":21,"nodeType":"97","endLine":37,"endColumn":23},{"ruleId":"82","replacedBy":"115"},{"ruleId":"84","replacedBy":"116"},"no-native-reassign",["117"],"no-negated-in-lhs",["118"],"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["119"],"'dispatch' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Route' is defined but never used.","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["120","121"],["122","123"],["124","125"],["126","127"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'body', 'history', and 'title'. Either include them or remove the dependency array.",["128"],"React Hook useEffect has a missing dependency: 'userid'. Either include it or remove the dependency array.",["129"],["117"],["118"],"no-global-assign","no-unsafe-negation",{"desc":"130","fix":"131"},{"messageId":"132","fix":"133","desc":"134"},{"messageId":"135","fix":"136","desc":"137"},{"messageId":"132","fix":"138","desc":"134"},{"messageId":"135","fix":"139","desc":"137"},{"messageId":"132","fix":"140","desc":"134"},{"messageId":"135","fix":"141","desc":"137"},{"messageId":"132","fix":"142","desc":"134"},{"messageId":"135","fix":"143","desc":"137"},{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},"Update the dependencies array to be: [dispatch, history]",{"range":"148","text":"149"},"removeEscape",{"range":"150","text":"151"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"152","text":"153"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"154","text":"151"},{"range":"155","text":"153"},{"range":"156","text":"151"},{"range":"157","text":"153"},{"range":"158","text":"151"},{"range":"159","text":"153"},"Update the dependencies array to be: [body, history, title, url]",{"range":"160","text":"161"},"Update the dependencies array to be: [userid]",{"range":"162","text":"163"},[908,910],"[dispatch, history]",[481,482],"",[481,481],"\\",[506,507],[506,506],[422,423],[422,422],[447,448],[447,447],[1105,1110],"[body, history, title, url]",[699,701],"[userid]"]